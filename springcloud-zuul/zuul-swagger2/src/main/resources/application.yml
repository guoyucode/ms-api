server:
    port: 8888
    max-http-header-size: 8192
#日志相关配置
#logging:
#  level:
#    root: DEBUG
#    org.springframework.web: DEBUG

spring:
    application:
        name: zuul-swagger-server
    # 关闭热部署
    devtools:
      restart:
        enabled: false
    #Eureka注册中心访问认证
    security:
        user:
            name: ginko
            password: 123456
# 指定注册中心地址
eureka:
    client:
        service-url:
            defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@eureka-server-peer1:8000/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@eureka-server-peer1:9000/eureka/
    # 启用ip配置 这样在注册中心列表中看见的是以ip+端口呈现的
    instance:
        prefer-ip-address: true
        instance-id: ${spring.cloud.client.ip-address}:${server.port}
## 路由规则 1、传统路由配置：不依赖服务发现。2、forward模式 直接转发至zuul提供的rest服务 3、服务发现模式
# 自定义路由规则：通过一组zuul.routes.<route>.path 与 zuul.routes.<route>.serviceId 参数对的方式配置
# http://localhost:8888/api-1/hello?name=ginkoZuul -> http://localhost:8028/hello?name=ginkoZuul
# http://localhost:8888/api-2/hello2?name=ginkoZuul2 -> http://localhost:8028/hello2?name=ginkoZuul2
zuul:
    #  prefix: /gateway
    ## 停用默认的异常处理器SendErrorFilter
    SendErrorFilter:
        error:
            disable: true
    ## 服务发现模式
    routes:
        api-ds:
            # 路由地址
            path: /api-ds/**
            #为具体服务的名称
            serviceId: demo-service-dev
        api-ts:
            path: /api-ts/**
            serviceId: demo-service-test
        api-ps:
            path: /api-ps/**
            serviceId: demo-service-prod

        api-af:
            # 路由地址
            path: /api-af/**
            #为具体服务的名称
            serviceId: consumer-feign1
        api-bf:
            path: /api-bf/**
            serviceId: consumer-feign2

swagger.enabled: true




