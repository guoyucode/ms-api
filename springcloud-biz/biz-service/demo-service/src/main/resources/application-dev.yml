server:
    port: 8001
#注册中心配置
eureka:
    client:
        serviceUrl:
            defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@eureka-server-peer1:8000/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@eureka-server-peer1:9000/eureka/
    instance:
        prefer-ip-address: true
        instance-id: ${spring.cloud.client.ip-address}:${server.port}
spring:
    application:
        name: demo-service-dev
    #Eureka注册中心访问认证
    security:
        user:
            name: ginko
            password: 123456
    # 数据库相关配置
    datasource:
        druid:
            url: jdbc:mysql://116.62.143.57:3306/duobei?useSSL=false
            password: Hjn184736351
            username: root
    # Redis服务器地址
    redis:
        host: 116.62.143.57
        # Redis服务器连接端口
        port: 6379
        # Redis数据库索引（默认为0）
        database: 0
        # Redis服务器连接密码（默认为空）
        password: mqfq123456
        # 连接超时时间（毫秒）
        timeout: 10000s
        # Lettuce
        # 连接池最大连接数（使用负值表示没有限制）
        lettuce.pool.max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        lettuce.pool.max-wait: 1000s
        # 连接池中的最大空闲连接
        lettuce.pool.max-idle: 100
        # 连接池中的最小空闲连接
        lettuce.pool.min-idle: 50
        # 关闭超时时间
        lettuce.shutdown-timeout: 1000s
    # rabbitmq相关配置
    rabbitmq:
        #rabbitmq连接参数
        host: ${RABBIT_MQ_HOST:127.0.0.1}
        port: ${RABBIT_MQ_PORT:5672}
        username: ${RABBIT_MQ_USERNAME:ginko}
        password: ${RABBIT_MQ_PASSWORD:ginko}
        virtual-host: /
        listener:
            simple:
                # 手动确认
                acknowledge-mode: manual
                #消费者自动启动
                auto-startup: true
                #消费者数量
                concurrency: 10
                #消费失败，自动重新入队
                default-requeue-rejected: true
                max-concurrency: 10
                #消费者每次从队列获取的消息数量
                prefetch: 1
        # 开启生产者确认模式
        publisher-confirms: true
        template:
            #启用发送重试
            retry:
                enabled: true
                initial-interval: 1000s
                max-attempts: 3
                max-interval: 10000s
                multiplier: 1.0
